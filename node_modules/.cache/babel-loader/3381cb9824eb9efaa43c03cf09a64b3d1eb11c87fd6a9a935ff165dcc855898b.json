{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = [];\nconst cart = createSlice({\n  name: 'cart reducer',\n  initialState,\n  reducers: {\n    add: (state, action) => {\n      return [...state, action.payload];\n    },\n    inc: (state, action) => {\n      const newState = state.map(e => {\n        if (e.id === action.payload) {\n          e.amount++;\n        }\n        return e;\n      });\n      state = newState;\n    },\n    dec: (state, action) => {\n      const newState = state.map(e => {\n        if (e.id === action.payload) {\n          if (e.amount > 1) {\n            e.amount--;\n          }\n        }\n        return e;\n      });\n      state = newState;\n    },\n    remove: (state, action) => {\n      const newState = state.filter(e => {\n        return e.id !== action.payload;\n      });\n      return newState;\n    },\n    reset: () => {\n      return [];\n    }\n  }\n});\nexport const cartAction = cart.actions;\nexport default cart.reducer;","map":{"version":3,"names":["createSlice","initialState","cart","name","reducers","add","state","action","payload","inc","newState","map","e","id","amount","dec","remove","filter","reset","cartAction","actions","reducer"],"sources":["C:/Users/сулпак/Desktop/dz6/src/redux/cart.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = [];\r\n\r\nconst cart = createSlice({\r\n  name: 'cart reducer',\r\n  initialState,\r\n  reducers: {\r\n    add: (state, action) => {\r\n      return [...state, action.payload];\r\n    },\r\n\r\n    inc: (state, action) => {\r\n      const newState = state.map((e) => {\r\n        if (e.id === action.payload) {\r\n          e.amount++;\r\n        }\r\n        return e;\r\n      });\r\n      state = newState;\r\n    },\r\n\r\n    dec: (state, action) => {\r\n      const newState = state.map((e) => {\r\n        if (e.id === action.payload) {\r\n          if (e.amount > 1) {\r\n            e.amount--;\r\n          }\r\n        }\r\n        return e;\r\n      });\r\n      state = newState;\r\n    },\r\n\r\n    remove: (state, action) => {\r\n      const newState = state.filter((e) => {\r\n        return e.id !== action.payload;\r\n      });\r\n      return newState;\r\n    },\r\n\r\n    reset: () => {\r\n      return [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartAction = cart.actions;\r\nexport default cart.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,IAAI,GAAGF,WAAW,CAAC;EACvBG,IAAI,EAAE,cAAc;EACpBF,YAAY;EACZG,QAAQ,EAAE;IACRC,GAAG,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtB,OAAO,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACnC,CAAC;IAEDC,GAAG,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACtB,MAAMG,QAAQ,GAAGJ,KAAK,CAACK,GAAG,CAAEC,CAAC,IAAK;QAChC,IAAIA,CAAC,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,EAAE;UAC3BI,CAAC,CAACE,MAAM,EAAE;QACZ;QACA,OAAOF,CAAC;MACV,CAAC,CAAC;MACFN,KAAK,GAAGI,QAAQ;IAClB,CAAC;IAEDK,GAAG,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACtB,MAAMG,QAAQ,GAAGJ,KAAK,CAACK,GAAG,CAAEC,CAAC,IAAK;QAChC,IAAIA,CAAC,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,EAAE;UAC3B,IAAII,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;YAChBF,CAAC,CAACE,MAAM,EAAE;UACZ;QACF;QACA,OAAOF,CAAC;MACV,CAAC,CAAC;MACFN,KAAK,GAAGI,QAAQ;IAClB,CAAC;IAEDM,MAAM,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MACzB,MAAMG,QAAQ,GAAGJ,KAAK,CAACW,MAAM,CAAEL,CAAC,IAAK;QACnC,OAAOA,CAAC,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO;MAChC,CAAC,CAAC;MACF,OAAOE,QAAQ;IACjB,CAAC;IAEDQ,KAAK,EAAEA,CAAA,KAAM;MACX,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGjB,IAAI,CAACkB,OAAO;AACtC,eAAelB,IAAI,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}